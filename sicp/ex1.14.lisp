(defun count-change (amount)
  (cc amount 5))

(defun cc (amount kinds-of-coins)
  (cond ((= amount 0) 1)
	((or (< amount 0) (= kinds-of-coins 0)) 0)
	(t (+ (cc amount
		  (- kinds-of-coins 1))
	      (cc (- amount
		     (first-denomination kinds-of-coins))
		  kinds-of-coins)))))

(defun first-denomination (kinds-of-coins)
  (cond ((= kinds-of-coins 1) 1)
	((= kinds-of-coins 2) 5)
	((= kinds-of-coins 3) 10)
	((= kinds-of-coins 4) 25)
	((= kinds-of-coins 5) 50)))
(count-change 11)

;;; time  O(2^n) ????
;;; space O(n)

;;; below is the calculate procedure, generated by SLIME with trace
  0: (CC 11 5)
    1: (CC 11 4)
      2: (CC 11 3)
        3: (CC 11 2)
          4: (CC 11 1)
            5: (CC 11 0)
            5: CC returned 0
            5: (CC 10 1)
              6: (CC 10 0)
              6: CC returned 0
              6: (CC 9 1)
                7: (CC 9 0)
                7: CC returned 0
                7: (CC 8 1)
                  8: (CC 8 0)
                  8: CC returned 0
                  8: (CC 7 1)
                    9: (CC 7 0)
                    9: CC returned 0
                    9: (CC 6 1)
                      10: (CC 6 0)
                      10: CC returned 0
                      10: (CC 5 1)
                        11: (CC 5 0)
                        11: CC returned 0
                        11: (CC 4 1)
                          12: (CC 4 0)
                          12: CC returned 0
                          12: (CC 3 1)
                            13: (CC 3 0)
                            13: CC returned 0
                            13: (CC 2 1)
                              14: (CC 2 0)
                              14: CC returned 0
                              14: (CC 1 1)
                                15: (CC 1 0)
                                15: CC returned 0
                                15: (CC 0 1)
                                15: CC returned 1
                              14: CC returned 1
                            13: CC returned 1
                          12: CC returned 1
                        11: CC returned 1
                      10: CC returned 1
                    9: CC returned 1
                  8: CC returned 1
                7: CC returned 1
              6: CC returned 1
            5: CC returned 1
          4: CC returned 1
          4: (CC 6 2)
            5: (CC 6 1)
              6: (CC 6 0)
              6: CC returned 0
              6: (CC 5 1)
                7: (CC 5 0)
                7: CC returned 0
                7: (CC 4 1)
                  8: (CC 4 0)
                  8: CC returned 0
                  8: (CC 3 1)
                    9: (CC 3 0)
                    9: CC returned 0
                    9: (CC 2 1)
                      10: (CC 2 0)
                      10: CC returned 0
                      10: (CC 1 1)
                        11: (CC 1 0)
                        11: CC returned 0
                        11: (CC 0 1)
                        11: CC returned 1
                      10: CC returned 1
                    9: CC returned 1
                  8: CC returned 1
                7: CC returned 1
              6: CC returned 1
            5: CC returned 1
            5: (CC 1 2)
              6: (CC 1 1)
                7: (CC 1 0)
                7: CC returned 0
                7: (CC 0 1)
                7: CC returned 1
              6: CC returned 1
              6: (CC -4 2)
              6: CC returned 0
            5: CC returned 1
          4: CC returned 2
        3: CC returned 3
        3: (CC 1 3)
          4: (CC 1 2)
            5: (CC 1 1)
              6: (CC 1 0)
              6: CC returned 0
              6: (CC 0 1)
              6: CC returned 1
            5: CC returned 1
            5: (CC -4 2)
            5: CC returned 0
          4: CC returned 1
          4: (CC -9 3)
          4: CC returned 0
        3: CC returned 1
      2: CC returned 4
      2: (CC -14 4)
      2: CC returned 0
    1: CC returned 4
    1: (CC -39 5)
    1: CC returned 0
  0: CC returned 4

4
