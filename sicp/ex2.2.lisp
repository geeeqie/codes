(defun make-segment (x y)
  (cons x y))
(defun start-segment (seg)
  (car seg))
(defun end-segment (seq)
  (cdr seq))
(defun make-point (x y)
  (cons x y))
(defun x-point (point)
  (car point))
(defun y-point (point)
  (cdr point))
(defun midpoint-segment (seg)
  (defun average (x y)
    (/ (+ x y) 2))
  (make-segment
   (average (x-point (start-segment seg))
	    (x-point (end-segment seg)))
   (average (y-point (start-segment seg))
	    (y-point (end-segment seg)))))

(defun print-point (p)
  (format t "(~a,~a)" (x-point p) (y-point p)))

(defvar p1 (make-point 1 1))
(defvar p2 (make-point 5 5))
(defvar seg (make-segment p1 p2))
(print-point (midpoint-segment seg))
