(defun make-segment (x y)
  (cons x y))
(defun start-segment (seg)
  (car seg))
(defun end-segment (seq)
  (cdr seq))
(defun make-point (x y)
  (cons x y))
(defun x-point (point)
  (car point))
(defun y-point (point)
  (cdr point))
(defun midpoint-segment (seg)
  (defun average (x y)
    (/ (+ x y) 2))
  (make-segment
   (average (x-point (start-segment seg))
	    (x-point (end-segment seg)))
   (average (y-point (start-segment seg))
	    (y-point (end-segment seg)))))

(defun print-point (p)
  (format t "(~a,~a)" (x-point p) (y-point p)))

(defun make-rectangle (p1 p2)
  (cons p1 p2))
(defun rect-p1 (rect)
  (car rect))
(defun rect-p2 (rect)
  (cdr rect))
(defun rect-width (rect)
  (abs (- (x-point (rect-p1 rect))
	  (x-point (rect-p2 rect)))))
(defun rect-height (rect)
  (abs (- (y-point (rect-p1 rect))
	  (y-point (rect-p2 rect)))))
(defun rect-area (rect)
  (* (rect-width rect)
     (rect-height rect)))
(defun rect-perimeter (rect)
  (* 2
     (+ (rect-width rect)
	(rect-height rect))))

(defvar rect (make-rectangle (make-point 1 1) (make-point 5 5)))
(rect-area rect)
(rect-perimeter rect)

